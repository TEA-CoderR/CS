$date
	Tue Nov 24 11:15:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module singlecycle $end
$var wire 1 ! RegWrite $end
$var wire 2 " RegSrc [1:0] $end
$var wire 1 # PCSrc $end
$var wire 1 $ MemtoReg $end
$var wire 1 % MemWrite $end
$var wire 32 & Instr [31:0] $end
$var wire 2 ' ImmSrc [1:0] $end
$var wire 4 ( Flags [3:0] $end
$var wire 1 ) ALUSrc $end
$var wire 2 * ALUControl [1:0] $end
$var reg 1 + CLK $end
$scope module dp $end
$var wire 1 + clock $end
$var wire 1 , Z $end
$var wire 32 - WriteData [31:0] $end
$var wire 1 . V $end
$var wire 32 / SrcB [31:0] $end
$var wire 32 0 SrcA [31:0] $end
$var wire 32 1 Result [31:0] $end
$var wire 1 ! RegWrite $end
$var wire 2 2 RegSrc [1:0] $end
$var wire 32 3 ReadData [31:0] $end
$var wire 4 4 RA2 [3:0] $end
$var wire 4 5 RA1 [3:0] $end
$var wire 1 # PCSrc $end
$var wire 32 6 PCPlus8 [31:0] $end
$var wire 32 7 PCPlus4 [31:0] $end
$var wire 32 8 PC1 [31:0] $end
$var wire 32 9 PC [31:0] $end
$var wire 1 : N $end
$var wire 1 $ MemtoReg $end
$var wire 1 % MemWrite $end
$var wire 32 ; Instr [31:0] $end
$var wire 2 < ImmSrc [1:0] $end
$var wire 32 = ExtImm [31:0] $end
$var wire 32 > Dummy [31:0] $end
$var wire 1 ? C $end
$var wire 1 ) ALUSrc $end
$var wire 32 @ ALUResult [31:0] $end
$var wire 2 A ALUControl [1:0] $end
$scope module MemD $end
$var wire 10 B addr [9:0] $end
$var wire 1 + clock $end
$var wire 32 C out [31:0] $end
$var wire 1 % we $end
$var wire 32 D in [31:0] $end
$var integer 32 E i [31:0] $end
$upscope $end
$scope module MemI $end
$var wire 10 F addr [9:0] $end
$var wire 1 + clock $end
$var wire 32 G out [31:0] $end
$upscope $end
$scope module alu1 $end
$var wire 32 H o [31:0] $end
$var wire 32 I a [31:0] $end
$upscope $end
$scope module alu2 $end
$var wire 32 J a [31:0] $end
$var wire 32 K o [31:0] $end
$upscope $end
$scope module aluprincip $end
$var wire 1 ? Carry $end
$var wire 1 . oVerflow $end
$var wire 32 L w1 [31:0] $end
$var wire 32 M not2mux [31:0] $end
$var wire 1 : Zero $end
$var wire 32 N Somma [31:0] $end
$var wire 1 O Rout $end
$var wire 32 P Risultato [31:0] $end
$var wire 32 Q Or2Mux4 [31:0] $end
$var wire 32 R OpB [31:0] $end
$var wire 1 , Negative $end
$var wire 2 S ControlloALU [1:0] $end
$var wire 32 T B [31:0] $end
$var wire 32 U And2Mux4 [31:0] $end
$var wire 32 V A [31:0] $end
$scope module alu1 $end
$var wire 1 W rip $end
$var wire 32 X out [31:0] $end
$var wire 1 O carry $end
$var wire 32 Y b [31:0] $end
$var wire 32 Z a [31:0] $end
$upscope $end
$scope module and1 $end
$var wire 32 [ out [31:0] $end
$var wire 32 \ b [31:0] $end
$var wire 32 ] a [31:0] $end
$upscope $end
$scope module mux21 $end
$var wire 1 ^ ctl $end
$var wire 32 _ out [31:0] $end
$var wire 32 ` b [31:0] $end
$var wire 32 a a [31:0] $end
$upscope $end
$scope module mux41 $end
$var wire 32 b a [31:0] $end
$var wire 32 c b [31:0] $end
$var wire 32 d c [31:0] $end
$var wire 32 e out [31:0] $end
$var wire 32 f d [31:0] $end
$var wire 2 g ctl [1:0] $end
$upscope $end
$scope module n2 $end
$var wire 32 h in [31:0] $end
$var wire 32 i out [31:0] $end
$upscope $end
$scope module not1 $end
$var wire 32 j out [31:0] $end
$var wire 32 k in [31:0] $end
$upscope $end
$scope module or1 $end
$var wire 32 l out [31:0] $end
$var wire 32 m b [31:0] $end
$var wire 32 n a [31:0] $end
$upscope $end
$upscope $end
$scope module ext $end
$var wire 24 o i [23:0] $end
$var wire 32 p o [31:0] $end
$var wire 2 q ExtImm [1:0] $end
$upscope $end
$scope module muxSrc1 $end
$var wire 1 r ctr $end
$var wire 4 s i1 [3:0] $end
$var wire 4 t i2 [3:0] $end
$var wire 4 u o [3:0] $end
$upscope $end
$scope module muxSrc2 $end
$var wire 1 v ctr $end
$var wire 4 w i1 [3:0] $end
$var wire 4 x i2 [3:0] $end
$var wire 4 y o [3:0] $end
$upscope $end
$scope module muxalu2 $end
$var wire 32 z i2 [31:0] $end
$var wire 32 { o [31:0] $end
$var wire 32 | i1 [31:0] $end
$var wire 1 ) ctr $end
$upscope $end
$scope module muxpcsrc $end
$var wire 32 } i1 [31:0] $end
$var wire 32 ~ o [31:0] $end
$var wire 32 !" i2 [31:0] $end
$var wire 1 # ctr $end
$upscope $end
$scope module muxwb $end
$var wire 32 "" i1 [31:0] $end
$var wire 32 #" i2 [31:0] $end
$var wire 32 $" o [31:0] $end
$var wire 1 $ ctr $end
$upscope $end
$scope module pc $end
$var wire 1 + clock $end
$var wire 32 %" in [31:0] $end
$var wire 32 &" out [31:0] $end
$var wire 1 '" we $end
$var reg 32 (" inreg [31:0] $end
$upscope $end
$scope module rfile $end
$var wire 4 )" A1 [3:0] $end
$var wire 4 *" A2 [3:0] $end
$var wire 4 +" A3 [3:0] $end
$var wire 1 + CLK $end
$var wire 32 ," R15 [31:0] $end
$var wire 32 -" RD2 [31:0] $end
$var wire 32 ." RD3 [31:0] $end
$var wire 32 /" WD3 [31:0] $end
$var wire 1 ! WE3 $end
$var wire 32 0" RD1 [31:0] $end
$upscope $end
$upscope $end
$scope module pc $end
$var wire 4 1" ALUFlags [3:0] $end
$var wire 1 + CLK $end
$var wire 4 2" Cond [3:0] $end
$var wire 6 3" Funct [5:0] $end
$var wire 2 4" Op [1:0] $end
$var wire 4 5" Rd [3:0] $end
$var wire 1 ! RegWrite $end
$var wire 1 6" RegW $end
$var wire 2 7" RegSrc [1:0] $end
$var wire 1 # PCSrc $end
$var wire 1 8" PCS $end
$var wire 1 $ MemtoReg $end
$var wire 1 % MemWrite $end
$var wire 1 9" MemW $end
$var wire 2 :" ImmSrc [1:0] $end
$var wire 2 ;" FlagW [1:0] $end
$var wire 1 ) ALUSrc $end
$var wire 2 <" ALUControl [1:0] $end
$scope module dec $end
$var wire 6 =" Funct [5:0] $end
$var wire 2 >" OP [1:0] $end
$var wire 4 ?" Rd [3:0] $end
$var wire 1 6" RegW $end
$var wire 2 @" RegSrc [1:0] $end
$var wire 1 8" PCS $end
$var wire 1 $ MemtoReg $end
$var wire 1 9" MemW $end
$var wire 2 A" ImmSrc [1:0] $end
$var wire 2 B" FlagW [1:0] $end
$var wire 1 C" Branch $end
$var wire 1 ) ALUSrc $end
$var wire 1 D" ALUOp $end
$var wire 2 E" ALUControl [1:0] $end
$scope module decAlu $end
$var wire 5 F" Funct [4:0] $end
$var wire 2 G" FlagW [1:0] $end
$var wire 1 D" ALUOp $end
$var wire 2 H" ALUControl [1:0] $end
$upscope $end
$scope module decPrinc $end
$var wire 1 I" Funct0 $end
$var wire 1 J" Funct5 $end
$var wire 2 K" OP [1:0] $end
$var wire 1 6" RegW $end
$var wire 2 L" RegSrc [1:0] $end
$var wire 1 $ MemtoReg $end
$var wire 1 9" MemW $end
$var wire 2 M" ImmSrc [1:0] $end
$var wire 1 C" Branch $end
$var wire 1 ) ALUSrc $end
$var wire 1 D" ALUOp $end
$upscope $end
$scope module logPC $end
$var wire 1 C" Branch $end
$var wire 1 8" PCS $end
$var wire 4 N" Rd [3:0] $end
$var wire 1 6" RegW $end
$upscope $end
$upscope $end
$scope module lc $end
$var wire 4 O" ALUFlags [3:0] $end
$var wire 1 + CLK $end
$var wire 4 P" Cond [3:0] $end
$var wire 2 Q" FlagW [1:0] $end
$var wire 1 9" MemW $end
$var wire 1 % MemWrite $end
$var wire 1 8" PCS $end
$var wire 1 # PCSrc $end
$var wire 1 6" RegW $end
$var wire 1 ! RegWrite $end
$var wire 1 R" CondEx $end
$var reg 4 S" FLAGS [3:0] $end
$scope module contrCond $end
$var wire 1 T" C $end
$var wire 4 U" Cond [3:0] $end
$var wire 1 V" N $end
$var wire 1 W" V $end
$var wire 1 X" Z $end
$var wire 1 R" CondEx $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0X"
0W"
0V"
b1110 U"
0T"
bx S"
1R"
b10 Q"
b1110 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
0J"
0I"
b0 H"
b10 G"
b1000 F"
b0 E"
1D"
0C"
b10 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b1000 ="
b0 <"
b10 ;"
b0 :"
09"
08"
b0 7"
16"
b0 5"
b0 4"
b1000 3"
b1110 2"
b0 1"
b10 0"
b101 /"
b1 ."
b11 -"
b1000 ,"
b0 +"
b10 *"
b1 )"
b0 ("
1'"
b0 &"
b100 %"
b101 $"
bx #"
b101 ""
b101 !"
b100 ~
b100 }
b11 |
b11 {
b10 z
b10 y
b0 x
b10 w
0v
b1 u
b1111 t
b1 s
0r
b0 q
b10 p
b100000010000000000000010 o
b10 n
b11 m
b11 l
b11 k
b11111111111111111111111111111100 j
b11111111111111111111111111111010 i
b101 h
b0 g
b11 f
b101 e
b10 d
b101 c
b101 b
b11 a
b11111111111111111111111111111100 `
b11 _
0^
b10 ]
b11 \
b10 [
b10 Z
b11 Y
b101 X
0W
b10 V
b10 U
b11 T
b0 S
b11 R
b11 Q
b101 P
0O
b101 N
b11111111111111111111111111111100 M
b11111111111111111111111111111010 L
b1000 K
b100 J
b0 I
b100 H
b11100000100000010000000000000010 G
b0 F
b10000000000 E
b11 D
bx C
b101 B
b0 A
b101 @
0?
b1 >
b10 =
b0 <
b11100000100000010000000000000010 ;
0:
b0 9
b100 8
b100 7
b1000 6
b1 5
b10 4
bx 3
b0 2
b101 1
b10 0
b11 /
0.
b11 -
0,
0+
b0 *
0)
b0 (
b0 '
b11100000100000010000000000000010 &
0%
0$
0#
b0 "
1!
$end
#1
1V"
1,
b111 Q
b111 f
b111 l
0T"
bx 3
bx C
bx #"
b1 (
b1 1"
b1 O"
0?
0O
b10 L
b10 i
b11111111111111111111111111111101 1
b11111111111111111111111111111101 !"
b11111111111111111111111111111101 $"
b11111111111111111111111111111101 /"
b1111111101 B
b11111111111111111111111111111101 @
b11111111111111111111111111111101 P
b11111111111111111111111111111101 e
b11111111111111111111111111111101 h
b11111111111111111111111111111101 ""
1W
1^
b11111111111111111111111111111101 N
b11111111111111111111111111111101 X
b11111111111111111111111111111101 b
b11111111111111111111111111111101 c
b1 *
b1 A
b1 S
b1 g
b1 <"
b1 E"
b1 H"
b11111111111111111111111111111010 M
b11111111111111111111111111111010 `
b11111111111111111111111111111010 j
b11111111111111111111111111111010 R
b11111111111111111111111111111010 Y
b11111111111111111111111111111010 _
b0 U
b0 [
b0 d
b0 =
b0 p
b0 z
b101 /
b101 T
b101 \
b101 a
b101 k
b101 m
b101 {
b101 -
b101 D
b101 |
b101 -"
b0 4
b0 y
b0 *"
b100 F"
b10000010011000000000000 o
b100 >
b100 ."
b11 +"
b11 x
b0 w
b11 5"
b11 ?"
b11 N"
b100 3"
b100 ="
b1000 8
b1000 ~
b1000 %"
b11100000010000010011000000000000 &
b11100000010000010011000000000000 ;
b11100000010000010011000000000000 G
b100 F
b1100 6
b1100 K
b1100 ,"
b1000 7
b1000 H
b1000 J
b1000 }
b100 9
b100 I
b100 &"
b100 ("
b0xx S"
1+
#2
0+
#3
1O
b11111111111111111111111111111101 >
b11111111111111111111111111111101 ."
0X"
0:
0V"
b0 (
b0 1"
b0 O"
0,
b100 3
b100 C
b100 #"
b11111111111111111111111111101111 L
b11111111111111111111111111101111 i
b10000 1
b10000 !"
b10000 $"
b10000 /"
b10000 B
0W
0^
b10000 R
b10000 Y
b10000 _
b10000 @
b10000 P
b10000 e
b10000 h
b10000 ""
b10 *
b10 A
b10 S
b10 g
b10 <"
b10 E"
b10 H"
b11111111111111111111111111101111 M
b11111111111111111111111111101111 `
b11111111111111111111111111101111 j
b10000 /
b10000 T
b10000 \
b10000 a
b10000 k
b10000 m
b10000 {
b11111111111111111111111111111101 Q
b11111111111111111111111111111101 f
b11111111111111111111111111111101 l
b10000 U
b10000 [
b10000 d
b1101 N
b1101 X
b1101 b
b1101 c
b10000 =
b10000 p
b10000 z
b11111111111111111111111111111101 0
b11111111111111111111111111111101 V
b11111111111111111111111111111101 Z
b11111111111111111111111111111101 ]
b11111111111111111111111111111101 n
b11111111111111111111111111111101 0"
1)
b11 5
b11 u
b11 )"
b0 F"
1J"
b110011000000010000 o
b11 s
b100000 3"
b100000 ="
b1100 8
b1100 ~
b1100 %"
b11100010000000110011000000010000 &
b11100010000000110011000000010000 ;
b11100010000000110011000000010000 G
b1000 F
b10000 6
b10000 K
b10000 ,"
b1100 7
b1100 H
b1100 J
b1100 }
b1000 9
b1000 I
b1000 &"
b1000 ("
1+
#4
0+
#5
b10000 0
b10000 V
b10000 Z
b10000 ]
b10000 n
b10000 0"
b10000 >
b10000 ."
0V"
0,
0X"
b0 (
b0 1"
b0 O"
0:
b11111111111111111111111111101101 L
b11111111111111111111111111101101 i
b10010 1
b10010 !"
b10010 $"
b10010 /"
bx 3
bx C
bx #"
b10010 B
1W
1^
b10010 @
b10010 P
b10010 e
b10010 h
b10010 ""
b11 *
b11 A
b11 S
b11 g
b11 <"
b11 E"
b11 H"
b1110 N
b1110 X
b1110 b
b1110 c
1O
b10010 Q
b10010 f
b10010 l
b11111111111111111111111111111101 M
b11111111111111111111111111111101 `
b11111111111111111111111111111101 j
b11111111111111111111111111111101 R
b11111111111111111111111111111101 Y
b11111111111111111111111111111101 _
b0 U
b0 [
b0 d
b10 /
b10 T
b10 \
b10 a
b10 k
b10 m
b10 {
b1 =
b1 p
b1 z
0)
b10 -
b10 D
b10 |
b10 -"
b1 4
b1 y
b1 *"
b11000 F"
0J"
b100000110011000000000001 o
b1 w
b11000 3"
b11000 ="
b10000 8
b10000 ~
b10000 %"
b11100001100000110011000000000001 &
b11100001100000110011000000000001 ;
b11100001100000110011000000000001 G
b1100 F
b10100 6
b10100 K
b10100 ,"
b10000 7
b10000 H
b10000 J
b10000 }
b1100 9
b1100 I
b1100 &"
b1100 ("
1+
#6
0+
#7
b1 3
b1 C
b1 #"
b11111111111111111111111111111011 L
b11111111111111111111111111111011 i
b100 1
b100 !"
b100 $"
b100 /"
b100 B
1T"
b100 @
b100 P
b100 e
b100 h
b100 ""
b100 (
b100 1"
b100 O"
1?
b11111111111111111111111111101100 R
b11111111111111111111111111101100 Y
b11111111111111111111111111101100 _
b10011 M
b10011 `
b10011 j
b11111111111111111111111111111100 Q
b11111111111111111111111111111100 f
b11111111111111111111111111111100 l
b1000 U
b1000 [
b1000 d
b100 N
b100 X
b100 b
b100 c
1#
0!
1r
0W
0^
b0 ;"
b0 B"
b0 G"
b0 Q"
b11111111111111111111111111101100 /
b11111111111111111111111111101100 T
b11111111111111111111111111101100 \
b11111111111111111111111111101100 a
b11111111111111111111111111101100 k
b11111111111111111111111111101100 m
b11111111111111111111111111101100 {
b11000 0
b11000 V
b11000 Z
b11000 ]
b11000 n
b11000 0"
1)
18"
b11111111111111111111111111101100 =
b11111111111111111111111111101100 p
b11111111111111111111111111101100 z
06"
b1 "
b1 2
b1 7"
b1 @"
b1 L"
b0 *
b0 A
b0 S
b0 g
b0 <"
b0 E"
b0 H"
bx -
bx D
bx |
bx -"
b1011 4
b1011 y
b1011 *"
b1111 5
b1111 u
b1111 )"
b1111 F"
1J"
1I"
1C"
b10 '
b10 <
b10 q
b10 :"
b10 A"
b10 M"
0D"
b111111111111111111111011 o
bx >
bx ."
b1111 +"
b1111 x
b1011 w
b1111 s
b1111 5"
b1111 ?"
b1111 N"
b101111 3"
b101111 ="
b10 4"
b10 >"
b10 K"
b100 8
b100 ~
b100 %"
b11101010111111111111111111111011 &
b11101010111111111111111111111011 ;
b11101010111111111111111111111011 G
b10000 F
b11000 6
b11000 K
b11000 ,"
b10100 7
b10100 H
b10100 J
b10100 }
b10000 9
b10000 I
b10000 &"
b10000 ("
1+
#8
0+
#9
b1 5
b1 u
b1 )"
b1000 8
b1000 ~
b1000 %"
1V"
b11111111111111111111111111111010 M
b11111111111111111111111111111010 `
b11111111111111111111111111111010 j
b11111111111111111111111111111010 R
b11111111111111111111111111111010 Y
b11111111111111111111111111111010 _
b10 L
b10 i
b11111111111111111111111111111101 1
b11111111111111111111111111111101 !"
b11111111111111111111111111111101 $"
b11111111111111111111111111111101 /"
1,
bx 3
bx C
bx #"
b1111111101 B
0#
b101 /
b101 T
b101 \
b101 a
b101 k
b101 m
b101 {
1!
0r
1W
1^
b10 ;"
b10 B"
b10 G"
b10 Q"
b11111111111111111111111111111101 @
b11111111111111111111111111111101 P
b11111111111111111111111111111101 e
b11111111111111111111111111111101 h
b11111111111111111111111111111101 ""
0T"
0)
08"
b0 =
b0 p
b0 z
16"
b0 "
b0 2
b0 7"
b0 @"
b0 L"
b1 *
b1 A
b1 S
b1 g
b1 <"
b1 E"
b1 H"
b1 (
b1 1"
b1 O"
0?
b101 -
b101 D
b101 |
b101 -"
b0 4
b0 y
b0 *"
b100 F"
0J"
0I"
0C"
b0 '
b0 <
b0 q
b0 :"
b0 A"
b0 M"
1D"
b111 Q
b111 f
b111 l
b0 U
b0 [
b0 d
b11111111111111111111111111111101 N
b11111111111111111111111111111101 X
b11111111111111111111111111111101 b
b11111111111111111111111111111101 c
0O
b10000010011000000000000 o
b10010 >
b10010 ."
b11 +"
b11 x
b0 w
b1 s
b11 5"
b11 ?"
b11 N"
b100 3"
b100 ="
b0 4"
b0 >"
b0 K"
b10 0
b10 V
b10 Z
b10 ]
b10 n
b10 0"
b11100000010000010011000000000000 &
b11100000010000010011000000000000 ;
b11100000010000010011000000000000 G
b100 F
b1100 6
b1100 K
b1100 ,"
b1000 7
b1000 H
b1000 J
b1000 }
b100 9
b100 I
b100 &"
b100 ("
1+
#10
0+
#11
b11111111111111111111111111111101 >
b11111111111111111111111111111101 ."
b100 3
b100 C
b100 #"
0V"
b11111111111111111111111111101111 L
b11111111111111111111111111101111 i
b10000 1
b10000 !"
b10000 $"
b10000 /"
0,
b10000 B
0W
0^
b10000 R
b10000 Y
b10000 _
b10000 @
b10000 P
b10000 e
b10000 h
b10000 ""
0T"
b10 *
b10 A
b10 S
b10 g
b10 <"
b10 E"
b10 H"
b11111111111111111111111111101111 M
b11111111111111111111111111101111 `
b11111111111111111111111111101111 j
b10000 U
b10000 [
b10000 d
b0 (
b0 1"
b0 O"
0?
b10000 /
b10000 T
b10000 \
b10000 a
b10000 k
b10000 m
b10000 {
b11111111111111111111111111111101 Q
b11111111111111111111111111111101 f
b11111111111111111111111111111101 l
b1101 N
b1101 X
b1101 b
b1101 c
1O
b10000 =
b10000 p
b10000 z
b11111111111111111111111111111101 0
b11111111111111111111111111111101 V
b11111111111111111111111111111101 Z
b11111111111111111111111111111101 ]
b11111111111111111111111111111101 n
b11111111111111111111111111111101 0"
1)
b11 5
b11 u
b11 )"
b0 F"
1J"
b110011000000010000 o
b11 s
b100000 3"
b100000 ="
b1100 8
b1100 ~
b1100 %"
b11100010000000110011000000010000 &
b11100010000000110011000000010000 ;
b11100010000000110011000000010000 G
b1000 F
b10000 6
b10000 K
b10000 ,"
b1100 7
b1100 H
b1100 J
b1100 }
b1000 9
b1000 I
b1000 &"
b1000 ("
1+
#12
0+
